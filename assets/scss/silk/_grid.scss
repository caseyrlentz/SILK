/* ========================================
// Silk Grid
// ===================================== */

.grid {
  @include clearfix;
  display: flex;
  flex-wrap: wrap;
  margin-right: $column-between * -1;
  margin-left: $column-between * -1;
}


/* ========================================
// Silk Columns
// ===================================== */

/* http://codepen.io/mimoduo/pen/vOMxLE */

[class^='col'] {
  float: left;
  margin: 0 $column-between $column-between * 2;
  width: 98%;
}

[class*='flush'] {
  margin-right: 0;
  margin-left: 0;
  width: 100%;
}

@for $i from 1 to length($breakpoints) + 1 {

  // Iterates through each breakpoint within $breakpoints
  @media (min-width: nth(nth($breakpoints, $i), 2)) {

    @for $x from 1 to $column-base {

      // Given the index of this loop, how many columns does that take up?
      .col-#{nth(nth($breakpoints, $i), 1)}-#{$x} {
        width: 100% / $column-base * $x - $column-between * 2;
      }

      // Create 'flush' classes *if* $column-flush-desired is set to true
      @if $column-flush-desired {

        .col-#{nth(nth($breakpoints, $i), 1)}-flush-#{$x} {
          width: 100% / $column-base * $x;
        }

      }

      // Create 'push' classes *if* $column-push-desired is set to true
      @if $column-push-desired {

        // Push classes push a column x number of columns on it's left
        // Given the index of this loop, how many columns does this push on the left?
        .col-#{nth(nth($breakpoints, $i), 1)}-push-#{$x} {
          margin-left: 100% / $column-base * $x + $column-between;
        }

      }

    }

  }

}
